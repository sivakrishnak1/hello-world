# Application
spring.application.name=commercetools-service
server.port=8080

# OpenTelemetry Configuration
otel.service.name=commercetools-service
otel.resource.attributes=service.name=commercetools-service,service.version=1.0.0,deployment.environment=${DEPLOYMENT_ENVIRONMENT:development}
otel.traces.exporter=otlp
otel.metrics.exporter=otlp
otel.logs.exporter=otlp

# OTLP Exporter Configuration
otel.exporter.otlp.endpoint=${DT_OTEL_ENDPOINT:https://your-tenant.live.dynatrace.com/api/v2/otlp}
otel.exporter.otlp.headers=Authorization=Api-Token ${DT_API_TOKEN:your-dynatrace-token}
otel.exporter.otlp.timeout=10000
otel.exporter.otlp.compression=gzip

# commercetools Configuration
commercetools.projectKey=${CT_PROJECT_KEY:your-project-key}
commercetools.clientId=${CT_CLIENT_ID:your-client-id}
commercetools.clientSecret=${CT_CLIENT_SECRET:your-client-secret}
commercetools.region=${CT_REGION:gcp-europe-west1}
commercetools.scope=${CT_SCOPE:manage_project:your-project-key}

# OpenTelemetry for commercetools SDK
commercetools.telemetry.opentelemetry.enabled=true
commercetools.telemetry.opentelemetry.tracing.enabled=true
commercetools.telemetry.opentelemetry.metrics.enabled=true

# Management endpoints
management.endpoints.web.exposure.include=health,info,metrics,prometheus
management.endpoint.health.show-details=always
management.metrics.export.dynatrace.enabled=false

# Logging
logging.level.com.commercetools=INFO
logging.level.io.opentelemetry=INFO
logging.level.com.example=DEBUG